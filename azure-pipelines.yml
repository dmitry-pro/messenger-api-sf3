resources:
- repo: self
queue:
  name: Hosted Ubuntu 1604
#Your build pipeline references an undefined variable named ‘phpVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘phpVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘phpVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘phpVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘phpVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
steps:
#  - bash: |
      # Write your commands here
      # Use the environment variables input below to pass secret variables to this script
#      sudo update-alternatives --set php /usr/bin/php$(phpVersion)
#      sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
#      sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
#      sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
#      sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
#      php -version
#      displayName: 'Set PHP'
#      enabled: false
  - script: |
      docker build -f Dockerfile -t $(dockerId)/$(imageName) .
      docker login -u $(dockerId) -p $pswd
      docker-compose up -d
      # provision
      docker-compose exec api sh -c "cd /var/www/application/bin && ./project-install"
      # tests
      docker-compose exec api sh -c "cd /var/www/application && ./vendor/bin/codecept run"
      # push
      docker push $(dockerId)/$(imageName)
    env:
        pswd: $(dockerPassword)
