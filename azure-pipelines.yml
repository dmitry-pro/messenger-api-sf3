resources:
- repo: self
queue:
  name: Hosted Ubuntu 1604
#variables:
#  BuildConfiguration: 'Release'
steps:
#  - bash: |
      # Write your commands here
      # Use the environment variables input below to pass secret variables to this script
#      sudo update-alternatives --set php /usr/bin/php$(phpVersion)
#      sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
#      sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
#      sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
#      sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
#      php -version
#      displayName: 'Set PHP'
#      enabled: false
#  - task: Docker@1
#    displayName: 'Docker login'
#    inputs:
#      containerregistrytype: 'Container Registry'
#      dockerRegistryEndpoint: 'teddyclub shop registry'
#      command: login

  - script: |
        docker build -f Dockerfile -t $(DockerId)/$(DockerImageName):$(Build.BuildId) .
        docker login -u $(DockerId) -p $pswd
        docker-compose up -d
    env:
        pswd: $(DockerPassword)
  - script: |
        # provision
        docker-compose exec api sh -c "cd /var/www/application/bin && ./project-install"
        # tests
        docker-compose exec api sh -c "cd /var/www/application && ./vendor/bin/codecept run"
  - script: |
        # push
        docker tag $(DockerId)/$(DockerImageName):$(Build.BuildId) $(DockerId)/$(DockerImageName):latest
        docker push $(DockerId)/$(DockerImageName)
    env:
        pswd: $(DockerPassword)

#  - task: Docker@1
#    displayName: 'Push an image'
#    enabled: true
#    inputs:
#      containerregistrytype: 'Container Registry'
#      dockerRegistryEndpoint: 'teddyclub shop registry'
##      command: 'Push an image'
#      command: 'push'
#          imageName: 'contoso.azurecr.io/$repositoryname:$(Build.BuildId)'
